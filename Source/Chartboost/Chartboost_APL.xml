<?xml version="1.0" encoding="utf-8"?>
<!--GearVR plugin additions-->
<root xmlns:android="http://schemas.android.com/apk/res/android">
	<!-- init section is always evaluated once per architecture -->
	<trace enable="true"/>
	<init>
		<log text="Chartboost init"/>
		<!-- currently only support armv7 -->
		<!-- <setBool result="bSupported" value="false"/>
		<isArch arch="armeabi-v7a">
			<setBool result="bSupported" value="true"/>
		</isArch> -->

		<!-- remove Oculus Signature Files by default -->
<!-- 		<setBool result="bRemoveOSIG" value="true"/> -->
		
<!-- 		<if condition="bRemoveOSIG">
			<true>
				<log text="Oculus Signature Files (osig) will be removed from APK"/>
			</true>
		</if> -->
		
		<!-- package for GearVR and for distribution -->
<!-- 		<setBool result="bGearDistribution" value="false"/>
		<if condition="bPackageForGearVR">
			<true>
				<isDistribution>
					<setBool result="bGearDistribution" value="true"/>
					<log text="Building with GearVR for distribution"/>
				</isDistribution>
			</true>
		</if> -->
		
		<!-- entitlements check if package GearVR for distribution and removing OSIGs -->
<!-- 		<setBoolAnd result="bEntitlementCheck" arg1="$B(bRemoveOSIG)" arg2="$B(bGearDistribution)"/> -->
	</init>
	
	

	<!-- optional additions to proguard -->
	<proguardAdditions>
		<insert>
<!-- -keep class com.oculus.** {
   *;
}
-keep class android.app.** {
   *;
} -->

-keep class com.chartboost.** { *; }
		</insert>
	</proguardAdditions>
	
	<!-- optional files or directories to copy to Intermediate/Android/APK -->
 	<resourceCopies>		
		<copyFile src="$S(PluginDir)/../../lib/Android/chartboost.jar" dst="$S(BuildDir)/libs/chartboost.jar" />
<!--		<isArch arch="armeabi-v7a">
			<copyFile src="$S(EngineDir)/Source/ThirdParty/Oculus/LibOVRMobile/LibOVRMobile_062/VrApi/Libs/Android/armeabi-v7a/libvrapi.so"
						dst="$S(BuildDir)/libs/armeabi-v7a/libvrapi.so" />
		</isArch>
		<copyFile src="$S(EngineDir)/Source/ThirdParty/Oculus/LibOVRMobile/LibOVRMobile_062/VrApi/Libs/Android/VrApi.jar"
					dst="$S(BuildDir)/libs/VrApi.jar" />
		<copyFile src="$S(EngineDir)/Source/ThirdParty/Oculus/LibOVRMobile/LibOVRMobile_062/1stParty/VrPlatform/libs/vrplatlib.jar"
					dst="$S(BuildDir)/libs/vrplatlib.jar" />
		<if condition="bRemoveOSIG">
			<true>
				<deleteFiles filespec="assets/oculussig_*" />
			</true>
		</if>-->
	</resourceCopies>

	<!-- optional additions to the GameActivity imports in GameActivity.java -->
	<gameActivityImportAdditions>
		<insert>
			import com.chartboost.sdk.Libraries.CBLogging.Level;
			import com.chartboost.sdk.Model.CBError.CBClickError;
			import com.chartboost.sdk.Model.CBError.CBImpressionError;
			import com.chartboost.sdk.Tracking.CBAnalytics;
			import com.chartboost.sdk.CBLocation;
			import com.chartboost.sdk.CBImpressionActivity;
			import com.chartboost.sdk.Chartboost;
			import com.chartboost.sdk.ChartboostDelegate;
	</insert>
	</gameActivityImportAdditions>
	

	<!-- optional additions to the GameActivity class in GameActivity.java -->
	<gameActivityClassAdditions>
		<insert>
		public native void nativeCbWillDisplayVideo(String location);
		public native void nativeCbDidCloseRewardedVideo(String location);
		public native void nativeCbDidCompleteRewardedVideo(String location, int reward);
		
		private ChartboostDelegate cbDelegate = new ChartboostDelegate() {
		
			// Implement to be notified of when a video will be displayed on the screen for 
			// a given CBLocation. You can then do things like mute effects and sounds.
			@Override
			public void willDisplayVideo(String location) {
				nativeCbWillDisplayVideo(location);
			}
			
			// Called after a rewarded video has been closed.
			@Override
			public void didCloseRewardedVideo(String location) {
				nativeCbDidCloseRewardedVideo(location);
			}
			
			// Called after a rewarded video has been viewed completely and user is eligible for reward.
			@Override
			public void didCompleteRewardedVideo(String location, int reward) {
				nativeCbDidCompleteRewardedVideo(location, reward);
			}
		};
		
		public void AndroidThunkJava_Chartboost_StartWithAppID(String appId, String appSignature)
		{
			Chartboost.startWithAppId(this, appId, appSignature);
			Chartboost.setDelegate(cbDelegate);
			Chartboost.onCreate(this);
		}

		public void AndroidThunkJava_Chartboost_CacheInterstitial(String location)
		{
			Chartboost.cacheInterstitial(CBLocation.LOCATION_DEFAULT);
		}

		public void AndroidThunkJava_Chartboost_ShowInterstitial(String location)
		{
			Chartboost.showInterstitial(CBLocation.LOCATION_DEFAULT);
		}

		public void AndroidThunkJava_Chartboost_CacheRewardedVideo(String location)
		{
			Chartboost.cacheRewardedVideo(CBLocation.LOCATION_DEFAULT);
		}

		public void AndroidThunkJava_Chartboost_ShowRewardedVideo(String location)
		{
			Chartboost.showRewardedVideo(CBLocation.LOCATION_DEFAULT);
		}
		
		public boolean AndroidThunkJava_Chartboost_HasRewardedVideo(String location)
		{
			return Chartboost.hasRewardedVideo(CBLocation.LOCATION_DEFAULT);
		}
		</insert>
	</gameActivityClassAdditions>
	
	<!-- optional additions to GameActivity onCreate metadata reading in GameActivity.java -->
	<gameActivityReadMetadataAdditions>
<!-- 		<if condition="bSupported">
			<true>
				<insert>
			
				</insert>
			</true>
		</if> -->
	</gameActivityReadMetadataAdditions>
	
	<!-- optional additions to GameActivity onCreate in GameActivity.java -->
	<gameActivityOnCreateAdditions>
	</gameActivityOnCreateAdditions>

	<!-- optional additions to GameActivity onDestroy in GameActivity.java -->
	<gameActivityOnDestroyAdditions>
		<insert>
		Chartboost.onDestroy(this);
		</insert>
	</gameActivityOnDestroyAdditions>
	
	
	<!-- optional additions to GameActivity onStart in GameActivity.java -->
	<gameActivityOnStartAdditions>
		<insert>
		Chartboost.onStart(this);
		</insert>
	</gameActivityOnStartAdditions>

	<!-- optional additions to GameActivity onStop in GameActivity.java -->
	<gameActivityOnStopAdditions>
		<insert>
		Chartboost.onStop(this);
		</insert>
	</gameActivityOnStopAdditions>
	

	<!-- optional additions to GameActivity onPause in GameActivity.java	-->
	<gameActivityOnPauseAdditions>
		<insert>
		Chartboost.onPause(this);
		</insert>
	</gameActivityOnPauseAdditions>


	<!-- optional additions to GameActivity onResume in GameActivity.java	-->
	<gameActivityOnResumeAdditions>
		<insert>
		Chartboost.onResume(this);
		</insert>
	</gameActivityOnResumeAdditions>


	<!-- optional additions to GameActivity onActivityResult in GameActivity.java -->
	<gameActivityOnActivityResultAdditions>
	</gameActivityOnActivityResultAdditions>
	

	<!-- optional libraries to load in GameActivity.java before libUE4.so -->
	<soLoadLibrary>
		<!-- need this if plugin enabled and supported architecture, even if not packaged for GearVR -->
	<!-- 	<if condition="bSupported">
			<true>
				<loadLibrary name="vrapi" failmsg="GearVR library not loaded and required!" />
			</true>
		</if> -->
	</soLoadLibrary>
</root>
